{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/demo/ts/Demo.ts","webpack:///./src/main/ts/Plugin.ts"],"names":[],"mappings":"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","file":"demo.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/demo/ts/Demo.ts\");\n","import { TinyMCE } from 'tinymce';\n\nimport Plugin from '../../main/ts/Plugin';\n\ndeclare let tinymce: TinyMCE;\n\nPlugin();\n\ntinymce.init({\n  selector: 'textarea.tinymce',\n  plugins: 'code new-footnotes',\n  toolbar: 'new-footnotes'\n});\n","import { Editor, TinyMCE } from 'tinymce';\n\ndeclare const tinymce: TinyMCE;\n\nconst setup = (editor: Editor, url: string): void => {\n    let footnoteCounter = 1;\n\n    // Inject CSS for footnotes\n    const css = `\n        .footnote-highlight {\n            background-color: yellow !important;\n        }\n    `;\n    const style = document.createElement('style');\n    style.type = 'text/css';\n    style.appendChild(document.createTextNode(css));\n    document.head.appendChild(style);\n\n    editor.ui.registry.addButton('new-footnotes', {\n        text: 'Footnote',\n        onAction: () => {\n            const selectedText = editor.selection.getContent({ format: 'text' });\n            if (!selectedText) {\n                editor.windowManager.alert('Please select a word or text to add a footnote.');\n                return;\n            }\n\n            editor.windowManager.open({\n                title: 'Insert Footnote',\n                body: {\n                    type: 'panel',\n                    items: [\n                        {\n                            type: 'input',\n                            name: 'footnoteText',\n                            label: 'Footnote Text'\n                        }\n                    ]\n                },\n                buttons: [\n                    {\n                        type: 'cancel',\n                        text: 'Cancel'\n                    },\n                    {\n                        type: 'submit',\n                        text: 'Save',\n                        primary: true\n                    }\n                ],\n                onSubmit: function (api) {\n                    const data = api.getData();\n                    insertFootnote(selectedText, data.footnoteText);\n                    api.close();\n                }\n            });\n        }\n    });\n\n    function insertFootnote(selectedText: string, footnoteText: string) {\n        const footnoteId = 'footnote-' + (new Date()).getTime();\n        const footnoteNumber = footnoteCounter++;\n        const footnoteMarker = `<span>${selectedText}<a id=\"footnote-entry-${footnoteId}-ref\" role=\"doc-noteref\" aria-labelledby=\"footnote-entry-${footnoteId}\" href=\"#footnote-entry-${footnoteId}\"><sup>[${footnoteNumber}]</sup></a></span>`;\n        const footnoteContent = `\n            <li id=\"footnote-entry-${footnoteId}\">\n                <a id=\"footnote-entry-${footnoteId}\">\n                    \n                </a>\n                ${footnoteText}\n                <a role=\"doc-backlink\" href=\"#footnote-entry-${footnoteId}-ref\" aria-label=\"Back to content\">â†µ</a>\n            </li>`;\n\n        editor.insertContent(footnoteMarker);\n\n        const footnotesSection = editor.dom.select('section[role=\"doc-footnotes\"] ol')[0];\n        if (footnotesSection) {\n            footnotesSection.innerHTML += footnoteContent;\n        } else {\n            editor.setContent(editor.getContent() + `<hr /><section role=\"doc-footnotes\" aria-label=\"footnotes\">\n                <h3 class=\"sr-only\" id=\"footnotes-block-${footnoteId}\">Footnotes</h3>\n                <ol>${footnoteContent.trim()}</ol>\n            </section>`);\n        }\n    }\n\n    function removeOrphanFootnotes() {\n        const footnoteRefs = editor.dom.select('a[role=\"doc-noteref\"]');\n        const footnoteIds = footnoteRefs.map(ref => ref.id.replace('-ref', ''));\n\n        const footnotes = editor.dom.select('li[id^=\"footnote-\"]');\n        footnotes.forEach(footnote => {\n            const footnoteId = footnote.id;\n            if (!footnoteIds.includes(footnoteId)) {\n                editor.dom.remove(footnote);\n            }\n        });\n\n        // Remove empty footnotes section\n        const footnotesSection = editor.dom.select('section[role=\"doc-footnotes\"]')[0];\n        if (footnotesSection && footnotesSection.querySelectorAll('li').length === 0) {\n            editor.dom.remove(footnotesSection);\n        }\n    }\n\n    editor.on('input', removeOrphanFootnotes);\n};\n\nexport default (): void => {\n    tinymce.PluginManager.add('new-footnotes', setup);\n};"],"sourceRoot":""}